// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using University.Database;

#nullable disable

namespace University.Migrations
{
    [DbContext(typeof(UniversityContext))]
    [Migration("20240514163116_initial-migration")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("University.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentName = "Exact science"
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentName = "Social science"
                        });
                });

            modelBuilder.Entity("University.Models.DepartmentLecture", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("LectureId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId", "LectureId");

                    b.HasIndex("LectureId");

                    b.ToTable("DepartmentLecture");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            LectureId = 1
                        },
                        new
                        {
                            DepartmentId = 1,
                            LectureId = 2
                        },
                        new
                        {
                            DepartmentId = 1,
                            LectureId = 3
                        },
                        new
                        {
                            DepartmentId = 1,
                            LectureId = 4
                        },
                        new
                        {
                            DepartmentId = 2,
                            LectureId = 1
                        },
                        new
                        {
                            DepartmentId = 2,
                            LectureId = 2
                        },
                        new
                        {
                            DepartmentId = 2,
                            LectureId = 3
                        },
                        new
                        {
                            DepartmentId = 2,
                            LectureId = 4
                        });
                });

            modelBuilder.Entity("University.Models.Lecture", b =>
                {
                    b.Property<int>("LectureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LectureId"));

                    b.Property<string>("LectureName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LectureId");

                    b.ToTable("Lecture");

                    b.HasData(
                        new
                        {
                            LectureId = 1,
                            LectureName = "Math"
                        },
                        new
                        {
                            LectureId = 2,
                            LectureName = "Informatics"
                        },
                        new
                        {
                            LectureId = 3,
                            LectureName = "Biology"
                        },
                        new
                        {
                            LectureId = 4,
                            LectureName = "Geography"
                        });
                });

            modelBuilder.Entity("University.Models.LectureStudent", b =>
                {
                    b.Property<int>("LectureId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("LectureId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("LectureStudent");

                    b.HasData(
                        new
                        {
                            LectureId = 1,
                            StudentId = 1
                        },
                        new
                        {
                            LectureId = 1,
                            StudentId = 2
                        },
                        new
                        {
                            LectureId = 1,
                            StudentId = 3
                        },
                        new
                        {
                            LectureId = 1,
                            StudentId = 4
                        },
                        new
                        {
                            LectureId = 2,
                            StudentId = 1
                        },
                        new
                        {
                            LectureId = 2,
                            StudentId = 2
                        },
                        new
                        {
                            LectureId = 2,
                            StudentId = 3
                        },
                        new
                        {
                            LectureId = 2,
                            StudentId = 4
                        },
                        new
                        {
                            LectureId = 3,
                            StudentId = 1
                        },
                        new
                        {
                            LectureId = 3,
                            StudentId = 2
                        },
                        new
                        {
                            LectureId = 3,
                            StudentId = 3
                        },
                        new
                        {
                            LectureId = 3,
                            StudentId = 4
                        },
                        new
                        {
                            LectureId = 4,
                            StudentId = 2
                        },
                        new
                        {
                            LectureId = 4,
                            StudentId = 3
                        });
                });

            modelBuilder.Entity("University.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<long>("StudentAge")
                        .HasColumnType("bigint")
                        .HasColumnOrder(3);

                    b.Property<string>("StudentGender")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(6);

                    b.Property<decimal>("StudentHeight")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnOrder(4);

                    b.Property<string>("StudentLastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(2);

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(1);

                    b.Property<decimal>("StudentWeight")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnOrder(5);

                    b.HasKey("StudentId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Student");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            DepartmentId = 2,
                            StudentAge = 18L,
                            StudentGender = "Male",
                            StudentHeight = 1.85m,
                            StudentLastname = "Matrix",
                            StudentName = "Ted",
                            StudentWeight = 90m
                        },
                        new
                        {
                            StudentId = 2,
                            DepartmentId = 2,
                            StudentAge = 19L,
                            StudentGender = "Male",
                            StudentHeight = 1.88m,
                            StudentLastname = "Collay",
                            StudentName = "Steve",
                            StudentWeight = 93.51m
                        },
                        new
                        {
                            StudentId = 3,
                            DepartmentId = 1,
                            StudentAge = 55L,
                            StudentGender = "Male",
                            StudentHeight = 1.73m,
                            StudentLastname = "Parry",
                            StudentName = "Mathew",
                            StudentWeight = 100.01m
                        },
                        new
                        {
                            StudentId = 4,
                            DepartmentId = 1,
                            StudentAge = 18L,
                            StudentGender = "Female",
                            StudentHeight = 1.69m,
                            StudentLastname = "Wanvooren",
                            StudentName = "Lisa",
                            StudentWeight = 52m
                        },
                        new
                        {
                            StudentId = 5,
                            DepartmentId = 2,
                            StudentAge = 20L,
                            StudentGender = "Female",
                            StudentHeight = 1.72m,
                            StudentLastname = "Wilde",
                            StudentName = "Olivia",
                            StudentWeight = 55m
                        },
                        new
                        {
                            StudentId = 6,
                            DepartmentId = 1,
                            StudentAge = 25L,
                            StudentGender = "Male",
                            StudentHeight = 2.01m,
                            StudentLastname = "Ogust",
                            StudentName = "Natan",
                            StudentWeight = 100.5m
                        },
                        new
                        {
                            StudentId = 7,
                            DepartmentId = 2,
                            StudentAge = 65L,
                            StudentGender = "Male",
                            StudentHeight = 1.88m,
                            StudentLastname = "Carrey",
                            StudentName = "Jim",
                            StudentWeight = 93m
                        },
                        new
                        {
                            StudentId = 8,
                            DepartmentId = 1,
                            StudentAge = 22L,
                            StudentGender = "Other",
                            StudentHeight = 2m,
                            StudentLastname = "Cyprus",
                            StudentName = "Ashlun",
                            StudentWeight = 100m
                        });
                });

            modelBuilder.Entity("University.Models.DepartmentLecture", b =>
                {
                    b.HasOne("University.Models.Department", "Department")
                        .WithMany("DepartmentLectures")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("University.Models.Lecture", "Lecture")
                        .WithMany("DepartmentLectures")
                        .HasForeignKey("LectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Lecture");
                });

            modelBuilder.Entity("University.Models.LectureStudent", b =>
                {
                    b.HasOne("University.Models.Lecture", "Lecture")
                        .WithMany("LectureStudents")
                        .HasForeignKey("LectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("University.Models.Student", "Student")
                        .WithMany("LectureStudents")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecture");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("University.Models.Student", b =>
                {
                    b.HasOne("University.Models.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("University.Models.Department", b =>
                {
                    b.Navigation("DepartmentLectures");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("University.Models.Lecture", b =>
                {
                    b.Navigation("DepartmentLectures");

                    b.Navigation("LectureStudents");
                });

            modelBuilder.Entity("University.Models.Student", b =>
                {
                    b.Navigation("LectureStudents");
                });
#pragma warning restore 612, 618
        }
    }
}
